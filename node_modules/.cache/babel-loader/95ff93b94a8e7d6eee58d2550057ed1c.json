{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\src\\\\views\\\\overview\\\\Column Chart with Indexlabel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar ChartWithIndexLabel = /*#__PURE__*/function (_Component) {\n  _inherits(ChartWithIndexLabel, _Component);\n\n  var _super = _createSuper(ChartWithIndexLabel);\n\n  function ChartWithIndexLabel() {\n    _classCallCheck(this, ChartWithIndexLabel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChartWithIndexLabel, [{\n    key: \"render\",\n    value: function render() {\n      var options = {\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: \"light2\",\n        //\"light1\", \"dark1\", \"dark2\"\n        title: {\n          text: \"Simple Column Chart with Index Labels\"\n        },\n        data: [{\n          type: \"column\",\n          //change type to bar, line, area, pie, etc\n          //indexLabel: \"{y}\", //Shows y value on all Data Points\n          indexLabelFontColor: \"#5A5757\",\n          indexLabelPlacement: \"outside\",\n          dataPoints: [{\n            x: 10,\n            y: 71\n          }, {\n            x: 20,\n            y: 55\n          }, {\n            x: 30,\n            y: 50\n          }, {\n            x: 40,\n            y: 65\n          }, {\n            x: 50,\n            y: 71\n          }, {\n            x: 60,\n            y: 68\n          }, {\n            x: 70,\n            y: 38\n          }, {\n            x: 80,\n            y: 92,\n            indexLabel: \"Highest\"\n          }, {\n            x: 90,\n            y: 54\n          }, {\n            x: 100,\n            y: 60\n          }, {\n            x: 110,\n            y: 21\n          }, {\n            x: 120,\n            y: 49\n          }, {\n            x: 130,\n            y: 36\n          }]\n        }]\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ChartWithIndexLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }\n      }, \"React Column Chart With Indexlabel\"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 4\n        }\n      }));\n    }\n  }]);\n\n  return ChartWithIndexLabel;\n}(Component);\n\nexport default ChartWithIndexLabel;","map":{"version":3,"sources":["C:/Users/Window 10 Home/Desktop/react-canvasjs-chart-samples/src/views/overview/Column Chart with Indexlabel.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","ChartWithIndexLabel","options","animationEnabled","exportEnabled","theme","title","text","data","type","indexLabelFontColor","indexLabelPlacement","dataPoints","x","y","indexLabel"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;IAEMC,mB;;;;;;;;;;;;;WACJ,kBAAS;AACV,UAAMC,OAAO,GAAG;AACfC,QAAAA,gBAAgB,EAAE,IADH;AAEfC,QAAAA,aAAa,EAAE,IAFA;AAGfC,QAAAA,KAAK,EAAE,QAHQ;AAGE;AACjBC,QAAAA,KAAK,EAAC;AACLC,UAAAA,IAAI,EAAE;AADD,SAJS;AAOfC,QAAAA,IAAI,EAAE,CAAC;AACNC,UAAAA,IAAI,EAAE,QADA;AACU;AAChB;AACAC,UAAAA,mBAAmB,EAAE,SAHf;AAINC,UAAAA,mBAAmB,EAAE,SAJf;AAKNC,UAAAA,UAAU,EAAE,CACX;AAAEC,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WADW,EAEX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WAFW,EAGX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WAHW,EAIX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WAJW,EAKX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WALW,EAMX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WANW,EAOX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WAPW,EAQX;AAAED,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE,EAAZ;AAAgBC,YAAAA,UAAU,EAAE;AAA5B,WARW,EASX;AAAEF,YAAAA,CAAC,EAAE,EAAL;AAASC,YAAAA,CAAC,EAAE;AAAZ,WATW,EAUX;AAAED,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb,WAVW,EAWX;AAAED,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb,WAXW,EAYX;AAAED,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb,WAZW,EAaX;AAAED,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb,WAbW;AALN,SAAD;AAPS,OAAhB;AA8BA,0BACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADD,eAEC,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAIZ;AAC1B;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD;AASE;;;;EAzC+BJ,S;;AA4ClC,eAAeG,mBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\nclass ChartWithIndexLabel extends Component {\r\n  render() {\r\n\tconst options = {\r\n\t\tanimationEnabled: true,\r\n\t\texportEnabled: true,\r\n\t\ttheme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\r\n\t\ttitle:{\r\n\t\t\ttext: \"Simple Column Chart with Index Labels\"\r\n\t\t},\r\n\t\tdata: [{\r\n\t\t\ttype: \"column\", //change type to bar, line, area, pie, etc\r\n\t\t\t//indexLabel: \"{y}\", //Shows y value on all Data Points\r\n\t\t\tindexLabelFontColor: \"#5A5757\",\r\n\t\t\tindexLabelPlacement: \"outside\",\r\n\t\t\tdataPoints: [\r\n\t\t\t\t{ x: 10, y: 71 },\r\n\t\t\t\t{ x: 20, y: 55 },\r\n\t\t\t\t{ x: 30, y: 50 },\r\n\t\t\t\t{ x: 40, y: 65 },\r\n\t\t\t\t{ x: 50, y: 71 },\r\n\t\t\t\t{ x: 60, y: 68 },\r\n\t\t\t\t{ x: 70, y: 38 },\r\n\t\t\t\t{ x: 80, y: 92, indexLabel: \"Highest\" },\r\n\t\t\t\t{ x: 90, y: 54 },\r\n\t\t\t\t{ x: 100, y: 60 },\r\n\t\t\t\t{ x: 110, y: 21 },\r\n\t\t\t\t{ x: 120, y: 49 },\r\n\t\t\t\t{ x: 130, y: 36 }\r\n\t\t\t]\r\n\t\t}]\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"ChartWithIndexLabel\">\r\n\t\t\t<h1>React Column Chart With Indexlabel</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n \r\nexport default ChartWithIndexLabel;"]},"metadata":{},"sourceType":"module"}