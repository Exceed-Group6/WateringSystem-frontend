{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\src\\\\views\\\\dynamic charts\\\\Dynamic Column Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar updateInterval = 500;\n\nvar DynamicColumnChart = /*#__PURE__*/function (_Component) {\n  _inherits(DynamicColumnChart, _Component);\n\n  var _super = _createSuper(DynamicColumnChart);\n\n  function DynamicColumnChart() {\n    var _this;\n\n    _classCallCheck(this, DynamicColumnChart);\n\n    _this = _super.call(this);\n    _this.updateChart = _this.updateChart.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DynamicColumnChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setInterval(this.updateChart, updateInterval);\n    }\n  }, {\n    key: \"updateChart\",\n    value: function updateChart() {\n      var dpsColor,\n          dpsTotal = 0,\n          deltaY,\n          yVal;\n      var dps = this.chart.options.data[0].dataPoints;\n\n      for (var i = 0; i < dps.length; i++) {\n        deltaY = Math.round(2 + Math.random() * (-2 - 2));\n        yVal = deltaY + dps[i].y > 0 ? deltaY + dps[i].y < 100 ? dps[i].y + deltaY : 100 : 0;\n        dpsColor = yVal >= 90 ? \"#e40000\" : yVal >= 70 ? \"#ec7426\" : yVal >= 50 ? \"#81c2ea\" : \"#88df86 \";\n        dps[i] = {\n          label: \"Core \" + (i + 1),\n          y: yVal,\n          color: dpsColor\n        };\n        dpsTotal += yVal;\n      }\n\n      this.chart.options.data[0].dataPoints = dps;\n      this.chart.options.title.text = \"CPU Usage \" + Math.round(dpsTotal / 6) + \"%\";\n      this.chart.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = {\n        theme: \"dark2\",\n        title: {\n          text: \"CPU Usage\"\n        },\n        subtitles: [{\n          text: \"Intel Core i7 980X @ 3.33GHz\"\n        }],\n        axisY: {\n          title: \"CPU Usage (%)\",\n          suffix: \"%\",\n          maximum: 100\n        },\n        data: [{\n          type: \"column\",\n          yValueFormatString: \"#,###'%'\",\n          indexLabel: \"{y}\",\n          dataPoints: [{\n            label: \"Core 1\",\n            y: 68\n          }, {\n            label: \"Core 2\",\n            y: 3\n          }, {\n            label: \"Core 3\",\n            y: 8\n          }, {\n            label: \"Core 4\",\n            y: 87\n          }, {\n            label: \"Core 5\",\n            y: 2\n          }, {\n            label: \"Core 6\",\n            y: 6\n          }]\n        }]\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 4\n        }\n      }, \"React Dynamic Line Chart\"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n        options: options,\n        onRef: function onRef(ref) {\n          return _this2.chart = ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 4\n        }\n      }));\n    }\n  }]);\n\n  return DynamicColumnChart;\n}(Component);\n\nexport default DynamicColumnChart;","map":{"version":3,"sources":["C:/Users/Window 10 Home/Desktop/react-canvasjs-chart-samples/src/views/dynamic charts/Dynamic Column Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","updateInterval","DynamicColumnChart","updateChart","bind","setInterval","dpsColor","dpsTotal","deltaY","yVal","dps","chart","options","data","dataPoints","i","length","Math","round","random","y","label","color","title","text","render","theme","subtitles","axisY","suffix","maximum","type","yValueFormatString","indexLabel","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nvar updateInterval = 500;\r\nclass DynamicColumnChart extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.updateChart = this.updateChart.bind(this);\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tsetInterval(this.updateChart, updateInterval);\r\n\t}\r\n\tupdateChart() {\r\n\t\tvar dpsColor, dpsTotal = 0, deltaY, yVal;\r\n\t\tvar dps = this.chart.options.data[0].dataPoints;\r\n\t\t\r\n\t\tfor (var i = 0; i < dps.length; i++) {\r\n\t\t\tdeltaY = Math.round(2 + Math.random() *(-2-2));\r\n\t\t\tyVal = deltaY + dps[i].y > 0 ? (deltaY + dps[i].y < 100 ? dps[i].y + deltaY : 100) : 0;\r\n\t\t\tdpsColor = yVal >= 90 ? \"#e40000\" : yVal >= 70 ? \"#ec7426\" : yVal >= 50 ? \"#81c2ea\" : \"#88df86 \";\r\n\t\t\tdps[i] = {label: \"Core \"+(i+1) , y: yVal, color: dpsColor};\r\n\t\t\tdpsTotal += yVal;\r\n\t\t}\r\n\t\tthis.chart.options.data[0].dataPoints = dps;\r\n\t\tthis.chart.options.title.text = \"CPU Usage \" + Math.round(dpsTotal / 6) + \"%\";\r\n\t\tthis.chart.render();\r\n\t}\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttheme: \"dark2\",\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"CPU Usage\"\r\n\t\t\t},\r\n\t\t\tsubtitles: [{\r\n\t\t\t\ttext: \"Intel Core i7 980X @ 3.33GHz\"\r\n\t\t\t}],\r\n\t\t\taxisY: {\r\n\t\t\t\ttitle: \"CPU Usage (%)\",\r\n\t\t\t\tsuffix: \"%\",\r\n\t\t\tmaximum: 100\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"column\",\r\n\t\t\t\tyValueFormatString: \"#,###'%'\",\r\n\t\t\t\tindexLabel: \"{y}\",\r\n\t\t\t\tdataPoints: [\r\n\t\t\t\t\t{ label: \"Core 1\", y: 68 },\r\n\t\t\t\t\t{ label: \"Core 2\", y: 3 },\r\n\t\t\t\t\t{ label: \"Core 3\", y: 8 },\r\n\t\t\t\t\t{ label: \"Core 4\", y: 87 },\r\n\t\t\t\t\t{ label: \"Core 5\", y: 2 },\r\n\t\t\t\t\t{ label: \"Core 6\", y: 6 }\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Dynamic Line Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\tonRef={ref => this.chart = ref}\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DynamicColumnChart;"]},"metadata":{},"sourceType":"module"}