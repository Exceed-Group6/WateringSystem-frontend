{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Window 10 Home\\\\Desktop\\\\react-canvasjs-chart-samples\\\\src\\\\views\\\\pie & funnel charts\\\\Pyramid Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar PyramidChart = /*#__PURE__*/function (_Component) {\n  _inherits(PyramidChart, _Component);\n\n  var _super = _createSuper(PyramidChart);\n\n  function PyramidChart() {\n    _classCallCheck(this, PyramidChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PyramidChart, [{\n    key: \"render\",\n    value: function render() {\n      var dataPoint;\n      var total;\n      var options = {\n        animationEnabled: true,\n        title: {\n          text: \"Sales via Advertisement\"\n        },\n        legend: {\n          horizontalAlign: \"right\",\n          verticalAlign: \"center\",\n          reversed: true\n        },\n        data: [{\n          type: \"pyramid\",\n          showInLegend: true,\n          legendText: \"{label}\",\n          indexLabel: \"{label} - {y}\",\n          toolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\n          dataPoints: [{\n            label: \"Impressions\",\n            y: 2850\n          }, {\n            label: \"Clicked\",\n            y: 2150\n          }, {\n            label: \"Free Downloads\",\n            y: 1900\n          }, {\n            label: \"Purchase\",\n            y: 650\n          }, {\n            label: \"Renewal\",\n            y: 250\n          }]\n        }]\n      }; //calculate percentage\n\n      dataPoint = options.data[0].dataPoints;\n      total = dataPoint[0].y;\n\n      for (var i = 0; i < dataPoint.length; i++) {\n        if (i === 0) {\n          options.data[0].dataPoints[i].percentage = 100;\n        } else {\n          options.data[0].dataPoints[i].percentage = (dataPoint[i].y / total * 100).toFixed(2);\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 4\n        }\n      }, \"React Pyramid Chart\"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 4\n        }\n      }));\n    }\n  }]);\n\n  return PyramidChart;\n}(Component);\n\nexport default PyramidChart;","map":{"version":3,"sources":["C:/Users/Window 10 Home/Desktop/react-canvasjs-chart-samples/src/views/pie & funnel charts/Pyramid Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","PyramidChart","dataPoint","total","options","animationEnabled","title","text","legend","horizontalAlign","verticalAlign","reversed","data","type","showInLegend","legendText","indexLabel","toolTipContent","dataPoints","label","y","i","length","percentage","toFixed"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;IAEMC,Y;;;;;;;;;;;;;WACL,kBAAS;AACR,UAAIC,SAAJ;AACA,UAAIC,KAAJ;AACA,UAAMC,OAAO,GAAG;AACfC,QAAAA,gBAAgB,EAAE,IADH;AAEfC,QAAAA,KAAK,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA,SAFQ;AAKfC,QAAAA,MAAM,EAAE;AACPC,UAAAA,eAAe,EAAE,OADV;AAEPC,UAAAA,aAAa,EAAE,QAFR;AAGPC,UAAAA,QAAQ,EAAE;AAHH,SALO;AAUfC,QAAAA,IAAI,EAAE,CAAC;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,YAAY,EAAE,IAFR;AAGNC,UAAAA,UAAU,EAAE,SAHN;AAINC,UAAAA,UAAU,EAAE,eAJN;AAKNC,UAAAA,cAAc,EAAE,4CALV;AAMNC,UAAAA,UAAU,EAAE,CACX;AAAEC,YAAAA,KAAK,EAAE,aAAT;AAAwBC,YAAAA,CAAC,EAAE;AAA3B,WADW,EAEX;AAAED,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,CAAC,EAAE;AAAvB,WAFW,EAGX;AAAED,YAAAA,KAAK,EAAE,gBAAT;AAA2BC,YAAAA,CAAC,EAAE;AAA9B,WAHW,EAIX;AAAED,YAAAA,KAAK,EAAE,UAAT;AAAqBC,YAAAA,CAAC,EAAE;AAAxB,WAJW,EAKX;AAAED,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,CAAC,EAAE;AAAvB,WALW;AANN,SAAD;AAVS,OAAhB,CAHQ,CA4BR;;AACAlB,MAAAA,SAAS,GAAGE,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAA5B;AACAf,MAAAA,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAakB,CAArB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGnB,SAAS,CAACoB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,YAAGA,CAAC,KAAK,CAAT,EAAY;AACXjB,UAAAA,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,GAA3C;AACA,SAFD,MAEO;AACNnB,UAAAA,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,CAAErB,SAAS,CAACmB,CAAD,CAAT,CAAaD,CAAb,GAAiBjB,KAAlB,GAA2B,GAA5B,EAAiCqB,OAAjC,CAAyC,CAAzC,CAA3C;AACA;AACD;;AAED,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,eAEC,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAIpB;AACzB;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADA;AASA;;;;EAjDyBN,S;;AAoD3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\nclass PyramidChart extends Component {\r\n\trender() {\r\n\t\tvar dataPoint;\r\n\t\tvar total;\r\n\t\tconst options = {\r\n\t\t\tanimationEnabled: true,\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"Sales via Advertisement\"\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\thorizontalAlign: \"right\",\r\n\t\t\t\tverticalAlign: \"center\",\r\n\t\t\t\treversed: true\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"pyramid\",\r\n\t\t\t\tshowInLegend: true,\r\n\t\t\t\tlegendText: \"{label}\",\r\n\t\t\t\tindexLabel: \"{label} - {y}\",\r\n\t\t\t\ttoolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\r\n\t\t\t\tdataPoints: [\r\n\t\t\t\t\t{ label: \"Impressions\", y: 2850},\r\n\t\t\t\t\t{ label: \"Clicked\", y: 2150},\r\n\t\t\t\t\t{ label: \"Free Downloads\", y: 1900},\r\n\t\t\t\t\t{ label: \"Purchase\", y: 650},\r\n\t\t\t\t\t{ label: \"Renewal\", y: 250}\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t}\r\n\t\t//calculate percentage\r\n\t\tdataPoint = options.data[0].dataPoints;\r\n\t\ttotal = dataPoint[0].y;\r\n\t\tfor(var i = 0; i < dataPoint.length; i++) {\r\n\t\t\tif(i === 0) {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = 100;\r\n\t\t\t} else {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = ((dataPoint[i].y / total) * 100).toFixed(2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Pyramid Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PyramidChart;"]},"metadata":{},"sourceType":"module"}